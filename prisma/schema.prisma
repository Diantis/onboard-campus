// prisma/schema.prisma

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Event {
  id          String   @id @default(uuid())
  title       String
  description String?
  start       DateTime
  end         DateTime
  allDay      Boolean  @default(false)
  color       String?
  location    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Student {
  id         Int               @id @default(autoincrement())
  role       Role              @default(STUDENT)
  name       String
  email      String            @unique
  password   String
  phone      String?
  address    String?
  ine        String?
  year       String?
  course     String?
  avatarUrl  String?
  createdAt  DateTime          @default(now())

  // Relation vers les signatures de documents
  signedDocs SignedDocument[]
}

enum Role {
  STUDENT
  ADMIN
}

model Prof {
  id    Int     @id @default(autoincrement())
  name  String
}

model FaqQuestion {
  id        String   @id @default(uuid())
  question  String
  answer    String?  // null si en attente de r√©ponse
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Document {
  id         String           @id @default(uuid())
  name       String
  fileUrl    String
  category   DocumentCategory
  createdAt  DateTime         @default(now())
  updatedAt  DateTime         @updatedAt

  // Relation vers les signatures
  signedBy   SignedDocument[]
}

enum DocumentCategory {
  TO_SIGN
  GENERAL
  RESOURCE
}

model SignedDocument {
  id          String    @id @default(uuid())
  document    Document  @relation(fields: [documentId], references: [id])
  documentId  String
  student     Student   @relation(fields: [studentId], references: [id])
  studentId   Int
  signature   String    // DataURL ou URL de la signature
  signedAt    DateTime  @default(now())

  @@unique([documentId, studentId])
}
